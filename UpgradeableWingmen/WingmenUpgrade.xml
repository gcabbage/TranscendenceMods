<?xml version="1.0" ?>

<TranscendenceModule>

	<DockScreen UNID="&dsWingmanList;"
			inherit=		"&dsRPGDockServicesBase;"
			nestedScreen=	"true"
			>
		<OnScreenInit>
			(block (
				; Find nearby wingmen
				(shipList (sysFindObject gSource "sAN:120; +property:playerWingman; +property:character;"))
				(shipIDList (map shipList shipObj (objGetID shipObj)))
				)

				(scrSetData gScreen 'shipIDList shipIDList)
				)
		</OnScreenInit>

		<Display type="carouselSelector"
				style="shipList"
				initialItem="=(scrSetListCursor gScreen (scrGetData gScreen 'cursor))"
				>
			<OnDisplayInit>
				(map (scrGetData gScreen 'shipIDList) shipID
					(block (
						(shipObj (objGetObjByID shipID))
						(shipClass (objGetType shipObj))
						)
						{
						title: (objGetName shipObj)
						icon: (shpGetImageDesc shipClass { rotation:0 })

						largeIcon: (shpGetImageDesc shipClass { type:'schematic })
						details: 
							(or (objFireEvent shipObj 'GetShipDetails { })
								(rpgGetShipDetails shipObj { })
								)

						shipObj: shipObj
						}
						)
					)
			</OnDisplayInit>
		</Display>

		<Panes>
			<Default name="Wingmen">
				<OnPaneInit>
					(switch
						;	No selection
						(not (scrGetListEntry gScreen))
							(block ()
								(scrSetDescTranslate gScreen 'descNoShipsForSale)
								(scrShowAction gScreen 'actionArmor Nil)
								(scrShowAction gScreen 'actionWeapons Nil)
								(scrShowAction gScreen 'actionLauncher Nil)
								(scrShowAction gScreen 'actionDevice Nil)
								)

					;	Ship selected
					(block (
							(theEntry (scrGetListEntry gScreen))
							(selObj (@ theEntry 'shipObj))
							(theShip (@ theEntry 'shipObj))
							actionStatus
							)

							; Set the description
							(scrSetDesc gScreen
								(objGetName theShip) " flies a " (objGetName theShip 'generic)
								". You met in " (sysGetName (objGetData theShip 'homeSystem))
								)

							; Armor
							(setq actionStatus (rpgCalcDockServiceReplaceAction gSource gPlayerShip (shpGetArmor theShip 0) {
									category: 'armor
									criteria: "aU"
									}))
							(scrShowAction gScreen 'actionArmor (@ actionStatus 'visible))
							(scrEnableAction gScreen 'actionArmor (@ actionStatus 'enabled))
							(scrSetActionDesc gScreen 'actionArmor (@ actionStatus 'desc))

							; Primary weapon
							(setq actionStatus (rpgCalcDockServiceInstallAction gSource gPlayerShip {
									category: 'weapon
									criteria: "pUN"
									}))
							(scrShowAction gScreen 'actionWeapons (@ actionStatus 'visible))
							(scrEnableAction gScreen 'actionWeapons (@ actionStatus 'enabled))
							(scrSetActionDesc gScreen 'actionWeapons (@ actionStatus 'desc))

							; Launcher
							(setq actionStatus (rpgCalcDockServiceInstallAction gSource gPlayerShip {
									category: 'launcher
									criteria: "lUN"
									}))
							(scrShowAction gScreen 'actionLauncher (@ actionStatus 'visible))
							(scrEnableAction gScreen 'actionLauncher (@ actionStatus 'enabled))
							(scrSetActionDesc gScreen 'actionLauncher (@ actionStatus 'desc))

							; Other
							(setq actionStatus (rpgCalcDockServiceInstallAction gSource gPlayerShip {
									category: 'other
									criteria: "d~wUN"
									}))
							(scrShowAction gScreen 'actionDevice (@ actionStatus 'visible))
							(scrEnableAction gScreen 'actionDevice (@ actionStatus 'enabled))
							(scrSetActionDesc gScreen 'actionDevice (@ actionStatus 'desc))
							)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionArmor">
						(block (
							(theEntry (scrGetListEntry gScreen))
							(shipObj (@ theEntry 'shipObj))
							)
							(scrSetData gScreen 'cursor (scrGetListCursor gScreen))
							(scrShowScreen gScreen "&dsWingmanUpgradeArmor;" {
								checkMilitaryID: (@ gData 'checkMilitaryID)
								shipObj: shipObj
								category: 'armor
								criteria: "aU"
								replaceItem: (shpGetArmor shipObj 0)
								})
							)
					</Action>
					<Action id="actionWeapons">
						(block (
							(theEntry (scrGetListEntry gScreen))
							(shipObj (@ theEntry 'shipObj))
							)
							(scrSetData gScreen 'cursor (scrGetListCursor gScreen))
							(scrShowScreen gScreen "&dsWingmanUpgradeDevice;" {
								checkMilitaryID: (@ gData 'checkMilitaryID)
								shipObj: shipObj
								category: 'weapon
								criteria: "pUN"
								replaceItem: (@ (objGetItems shipObj "pI") 0)
								})
							)
					</Action>
					<Action id="actionLauncher">
						(block (
							(theEntry (scrGetListEntry gScreen))
							(shipObj (@ theEntry 'shipObj))
							)
							(scrSetData gScreen 'cursor (scrGetListCursor gScreen))
							(scrShowScreen gScreen "&dsWingmanUpgradeDevice;" {
								checkMilitaryID: (@ gData 'checkMilitaryID)
								shipObj: shipObj
								category: 'launcher
								criteria: "lUN"
								replaceItem: (@ (objGetItems shipObj "lI") 0)
								})
							)
					</Action>
					<Action id="actionDevice">
						(block (
							(theEntry (scrGetListEntry gScreen))
							(shipObj (@ theEntry 'shipObj))
							)
							(scrSetData gScreen 'cursor (scrGetListCursor gScreen))
							(scrShowScreen gScreen "&dsWingmanUpgradeDevice;" {
								checkMilitaryID: (@ gData 'checkMilitaryID)
								shipObj: shipObj
								category: 'device
								criteria: "d~wUN"
								})
							)
					</Action>
					<Action id="actionDone" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>

		<Language>
			<Text id="actionArmor">"Upgrade [A]rmor"</Text>
			<Text id="actionWeapons">"Upgrade [W]eapon"</Text>
			<Text id="actionLauncher">"Upgrade [L]auncher"</Text>
			<Text id="actionDevice">"Upgrade [E]quipment"</Text>
		</Language>

		<Events>
			<OnGlobalPaneInit>
				(switch
					(!= aScreenUNID &dsRPGDockServices;)
						Nil

					(!= aPane "Default")
						Nil

					(sysFindObject gSource "sAN:120; +property:playerWingman; +property:character;")
						(scrAddAction
							gScreen
							'wingmanAction
							4
							"[V]iew Wingmen"
							(scrShowScreen gScreen "&dsWingmanList;")
							)
					)
			</OnGlobalPaneInit>
		</Events>
	</DockScreen>

	<DockScreen UNID="&dsWingmanUpgradeDevice;"
			type=			"itemPicker"
			inherit=		"&dsWingmanUpgradeBase;"
		 	nestedScreen=	"true"
			>
		<ListOptions
				dataFrom=	"player"
				list=		"*"
				>
			(block (
				(criteria (if (@ gData 'criteria) (@ gData 'criteria) "dUN"))
				)

				(scrSetListFilter gScreen (lambda (theItem)
					(and
						(itmMatches theItem criteria)
						(or
							(not (@ gData 'replaceItem))
							(not (itmIsEqual theItem (@ gData 'replaceItem) 'ignoreInstalled))
							)
						)
					))
				)
		</ListOptions>

		<OnScreenInit>
			(block Nil
				(scrSetData gScreen 'shipObj (@ gData 'shipObj))
				)
		</OnScreenInit>

		<Panes>
			<Default desc="Pick a device to offer">
				<OnPaneInit>
					(block (
						(shipObj (scrGetData gScreen 'shipObj))
						(theItem (scrGetItem gScreen))
						(itemToReplace (or
							(@ gData 'replaceItem)
							(@ (objCanInstallItem shipObj theItem -1) 3)
							))
						theResult canInstall desc
						)
						; Check if we are able to install the device
						(setq theResult (rpgInstallDevicePrep {
							item: theItem
							targetObj: shipObj
							checkMilitaryID: (@ gData 'checkMilitaryID)
							installerObj: gSource
							totalPrice: 0
							noCargoCheck: True
							replaceItem: (@ gData 'replaceItem)
							}))

						(if (and
								; Did not request an item replacement, but need to install
								(not (@ gData 'replaceItem)) itemToReplace
								; The replacment items is a different category to the original
								(!= (itmGetCategory theItem) (itmGetCategory itemToReplace))
								; The original item is one of: weapon, launcher, reactor, shield
								(find '(4 16 64 128) (itmGetCategory itemToReplace))
								)
							(block Nil
								; Then we refuse to install the item
								(set@ theResult 'canInstall Nil)
								(set@ theResult 'desc
									(scrTranslate gScreen 'rpg.cannotInstallDeviceBecauseLackOfSlots {
										item:theItem
										targetObj:shipObj
										slotsRequired:(itmGetProperty theItem 'deviceSlots)
										})
									)
								(setq itemToReplace Nil)
								)
							)

						(if itemToReplace
							(scrSetControlValue gScreen 'currentItem {
								source: shipObj
								item: itemToReplace
								})
							)

						(switch
							; Can't install so keep rpgInstallDevicePrep message
							(not (@ theResult 'canInstall))
								(setq desc (@ theResult 'desc))

							(not (itmIsKnown theItem))
								(setq desc (scrTranslate gScreen 'NoUnknown { item:theItem targetObj:shipObj }))

							(gr (itmGetLevel itemToReplace) (itmGetLevel theItem))
								(setq desc (scrTranslate gScreen 'WantBetter { item:theItem targetObj:shipObj oldItem:itemToReplace}))

							(and (= (@ gData 'category) 'weapon) (itmGetProperty theItem 'ammoType))
								(setq desc (scrTranslate gScreen 'NoAmmoWeapons { item:theItem targetObj:shipObj }))

							(block Nil
								(setq desc (scrTranslate gScreen 'WillInstall { item:theItem targetObj:shipObj }))
								(setq canInstall True)
								)
							)

						; Set the description
						(scrSetDesc gScreen desc)

						; Disable actions
						(scrEnableAction gScreen 'actionInstall canInstall)
						)
				</OnPaneInit>

				<Controls>
					<ItemDisplay id="currentItem"/>
					<Text id="desc"/>
					<Text id="descWarning" style="warning"/>
				</Controls>

				<Actions>
					<Action id="actionInstall" default="1">
						(block (
							(shipObj (scrGetData gScreen 'shipObj))
							(theItem (scrGetItem gScreen))
							(recommendedSlot {
								deviceSlot:
									(if (and (@ gData 'replaceItem)
											(itmGetInstallPos (@ gData 'replaceItem))
											)
										(itmGetInstallPos (@ gData 'replaceItem))
										-1
										)
								slotPosIndex: (@ gData 'slotPosIndex)
								})
							)

							;	Move device to wingman ship
							(objRemoveItem gPlayerShip theItem)
							(objAddItem shipObj theItem)

							;	Install the device
							(shpInstallDevice shipObj theItem recommendedSlot)
							(objCharge gPlayerShip (objGetDefaultCurrency gSource) gCost)
							(typSetData &svPlayer; 'tutorialInstalled True)

							;	If the original item is still installed, then uninstall it
							(if (and (@ gData 'replaceItem)
									(filter (objGetItems shipObj "dI") theItem
										(itmIsEqual theItem (@ gData 'replaceItem))
										)
									)
								(shpRemoveDevice shipObj (@ gData 'replaceItem))
								)

							;	Take any old devices and dispose of it (assume the wingman sold them)
							(enum (objGetItems shipObj "dU") theItem (objRemoveItem shipObj theItem))

							;	Done
							(scrExitScreen gScreen)
							)
					</Action>

					<Action id="actionCancel" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>
		<Language>
			<Text id="descCategory">
				(block (
					(category (itmGetCategory (@ gData 'item)))
					)
					(switch
						(= category 1) "misc item"
						(= category 2) "armor"
						(= category 4) "weapon"
						(= category 8) "device"
						(= category 16) "launcher"
						(= category 64) "reactor"
						(= category 128) "shield"
						(= category 256) "cargo bay"
						(= category 2048) "drive"
						"unknown"
						)
					)
			</Text>
			<Text id="WantBetter">
				(cat
					"\"No thanks&mdash;my current "
					(scrTranslate gScreen 'descCategory {item:(@ gData 'oldItem)})
					" is better than " (itmGetName (@ gData 'item) 0x04) ".\""
					)
			</Text>
			<Text id="NoAmmoWeapons">"\"No thanks, I don't like my primary weapon to use ammo.\""</Text>
			<Text id="NoUnknown">"\"Why don't you test that on your own ship first?\""</Text>
			<Text id="WillInstall">(cat "\"I can install " (itmGetName (@ gData 'item) 0x04) " on my ship.")</Text>
		</Language>

	</DockScreen>

	<DockScreen UNID="&dsWingmanUpgradeArmor;"
			type=			"itemPicker"
			inherit=		"&dsWingmanUpgradeBase;"
			nestedScreen=	"true"
			>
		<ListOptions
				dataFrom=	"player"
				list=		"*"
				>
			(block (
				(criteria (if (@ gData 'criteria) (@ gData 'criteria) "aU"))
				)

				(scrSetListFilter gScreen (lambda (theItem)
					(and
						(itmMatches theItem criteria)
						(or
							(not (@ gData 'replaceItem))
							(not (itmIsEqual theItem (@ gData 'replaceItem) 'ignoreInstalled))
							)
						)
					))
				)
		</ListOptions>

		<OnScreenInit>
			(block Nil
				(scrSetData gScreen 'shipObj (@ gData 'shipObj))
				)
		</OnScreenInit>

		<Panes>
			<Default desc="Pick an armor to offer">
				<OnPaneInit>
					(block (
						(shipObj (scrGetData gScreen 'shipObj))
						(theItem (scrGetItem gScreen))
						canInstall desc descWarning
						)

						(if (@ gData 'replaceItem)
							(scrSetControlValue gScreen 'currentItem {
								source: shipObj
								item: (@ gData 'replaceItem)
								})
							)

						(if theItem
							(block (
								; Ask the object if we can install the armor
								(returnValue (objCanInstallItem shipObj theItem 0))
								(resultCode (@ returnValue 1))
								(resultMessage (@ returnValue 2))
								; Ask the station if it can install the armor
								(installStatus (objGetItemProperty gSource theItem 'installItemStatus))
								)
								(switch
									(and (@ gData 'checkMilitaryID) (itmHasModifier theItem "Military") (not (objGetItems shipObj "*+MilitaryID")))
										(setq desc (or
											(objTranslate gSource 'rpg.cannotInstallDeviceWithoutMilitaryID { item:theItem targetObj:shipObj })
											(scrTranslate gScreen 'rpg.cannotInstallDeviceWithoutMilitaryID { item:theItem targetObj:shipObj })
											))

									(and (@ gData 'checkMilitaryID) (itmHasModifier theItem "Illegal"))
										(setq desc (or
											(objTranslate gSource 'rpg.cannotInstallDeviceBecauseIllegal { item:theItem targetObj:shipObj })
											(scrTranslate gScreen 'rpg.cannotInstallDeviceBecauseIllegal { item:theItem targetObj:shipObj })
											))

									(= resultCode 'armorTooHeavy)
										(setq desc (or
											(objTranslate gSource 'rpg.cannotInstallArmorBecauseTooHeavy { item:theItem targetObj:shipObj maxArmorMass:(objGetProperty shipObj 'maxArmorMass) })
											(scrTranslate gScreen 'rpg.cannotInstallArmorBecauseTooHeavy { item:theItem targetObj:shipObj maxArmorMass:(objGetProperty shipObj 'maxArmorMass) })
											))

									(= resultCode 'cannotInstall)
										(setq desc resultMessage)

									(not (= resultCode 'ok))
										(setq desc (or
											(objTranslate gSource 'rpg.cannotInstallDevice { item:theItem targetObj:shipObj })
											(scrTranslate gScreen 'rpg.cannotInstallDevice { item:theItem targetObj:shipObj })
											))

									; Station cannot install armor
									(not (@ installStatus 'canInstall))
										(if (@ installStatus 'descID)
											(setq desc (objTranslate gSource (@ installStatus 'descID) { item:theItem targetObj:shipObj }))
											(setq desc (or
												(objTranslate gSource 'rpg.noTechToInstallDevice { item:theItem targetObj:shipObj })
												(scrTranslate gScreen 'rpg.noTechToInstallDevice { item:theItem targetObj:shipObj })
												))
											)

									(@ installStatus 'upgradeInstallOnly)
										(setq desc (or
											(objTranslate gSource 'rpg.cannotInstallDeviceWithoutUpgrade { item:theItem targetObj:shipObj })
											(scrTranslate gScreen 'rpg.cannotInstallDeviceWithoutUpgrade { item:theItem targetObj:shipObj })
											))

									(gr (itmGetLevel (shpGetArmor shipObj 0)) (itmGetLevel theItem))
										(setq desc (scrTranslate gScreen 'WantBetter { item:theItem targetObj:shipObj }))

									(gr (shpGetArmorCount shipObj) (itmGetCount theItem))
										(setq desc (scrTranslate gScreen 'WantMore { item:theItem targetObj:shipObj }))

									(block Nil
										(setq desc (scrTranslate gScreen 'WillInstall { item:theItem targetObj:shipObj }))
										(setq canInstall True)
										)
									)
								)

							(setq desc "You do not have any armor segments in your cargo hold.")
							)

						; Set the description
						(scrSetDesc gScreen desc)
						(if descWarning
							(scrSetControlValue gScreen 'descWarning descWarning)
							)

						; Disable actions
						(scrEnableAction gScreen 'actionInstall canInstall)
						)
				</OnPaneInit>

				<Controls>
					<ItemDisplay id="currentItem"/>
					<Text id="desc"/>
					<Text id="descWarning" style="warning"/>
				</Controls>

				<Actions>
					<Action id="actionInstall" default="1">
						(block (
							(shipObj (scrGetData gScreen 'shipObj))
							(theItem (scrGetItem gScreen))
							(armorCount (shpGetArmorCount shipObj))
							)

							;	Move armor to wingman
							(objRemoveItem gPlayerShip theItem armorCount)
							(objAddItem shipObj theItem armorCount)

							;	Install the armor
							(for i 0 (- armorCount 1) (shpInstallArmor shipObj theItem i))

							;	Take any old armor and dispose of it (assume the wingman sold it)
							(enum (objGetItems shipObj "aU") theItem (objRemoveItem shipObj theItem))

							;	Done
							(scrExitScreen gScreen)
							)
					</Action>

					<Action id="actionCancel" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>

		<Language>
			<Text id="WantBetter">(cat "\"No thanks&mdash;my current armor is better than " (itmGetName (@ gData 'item) 0x80) ".\"")</Text>
			<Text id="WantMore">(cat "\"My ship needs " (shpGetArmorCount (@ gData 'targetObj)) " armor segments.\"")</Text>
			<Text id="WillInstall">(cat "\"I can install " (itmGetName (@ gData 'item) 0x04) " on my ship.")</Text>
		</Language>
	</DockScreen>


	<DockScreen unid="&dsWingmanUpgradeBase;"
			inherit="&dsDockScreenBase;"
			>
		<Language>
			<Text id="actionInstall">"[I]nstall"</Text>
			<Text id="rpg.noTechToInstallDevice">
				(cat
					"\"This station does not have the technology to install "
					(itmGetName (@ gData 'item) 0x04) " on my ship.\""
					)
			</Text>
			<Text id="rpg.cannotInstallDeviceBecauseAlreadyInstalled">
				(cat "\"My ship already has " (itmGetName (@ gData 'item) 0x04) ".\"")
			</Text>
			<Text id="rpg.cannotInstallDeviceWithoutMilitaryID">
				(cat "\"I don't have a military ID to install " (itmGetName (@ gData 'item) 0x80) ".\"")
			</Text>
			<Text id="rpg.cannotInstallDeviceBecauseIllegal">
				"\"No thanks, that's illegal here.\""
			</Text>
			<Text id="rpg.cannotInstallArmorBecauseTooHeavy">
				(cat "\"" (itmGetName (@ gData 'item) 0x81) " is too heavy for my ship's hull.\"")
			</Text>
			<Text id="rpg.cannotInstallDevice">
				"\"I can't install that.\""
			</Text>
			<Text id="rpg.cannotInstallDeviceWithoutUpgrade">
				"Sorry, installation services are only available for purchased upgrades."
			</Text>
			<Text id="rpg.cannotInstallDeviceBecauseReactorTooWeak">
				(cat "\"My reactor is not powerful enough for " (itmGetName (@ gData 'item) 0x04) ".\"")
			</Text>
			<Text id="rpg.cannotInstallReactorBecauseTooStrong">
				(cat "\"The power output of " (itmGetName (@ gData 'item) 0x04) " is too high for my ship.\"")
			</Text>
			<Text id="rpg.cannotInstallDeviceBecauseLackOfSlots">
				(if (gr (@ gData 'slotsRequired) 1)
					(cat "\"My ship does not have enough open device slots to install that.\"")
					(cat "\"My ship does not have an open device slot for that.\"")
					)
			</Text>
		</Language>
	</DockScreen>

</TranscendenceModule>
