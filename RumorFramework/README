Rumor Framework
---------------

Rumor system to replace the hard coded rumors used in base game. Provides an
easy way to implement dynamic rumors which change in response to in game events
(e.g. mission outcomes). The library uses two events (GetRumors and
GetGlobalRumors) to query in game objects to generate a list of suitable rumors.
It will then display a random rumor to the player.

	<GetRumor> called on active stations and all missions
	<GetGlobalRumor> called on all types

The events should return a list of possible rumors. Each rumor is a struct with
three parts:
	desc: Text to display
	priority: higher priority rumors are more likely to be displayed
	code: (optional) code to execute when rumor is displayed

Rumors can be shown in game by using the msfShowRumor function (similar to the
rpgMissionAssignment function) or by placing the msfGenerateRumor function
inside a Language element (e.g. descNoMissions)

Core changes:

Benedict02 - Adds rumors after the Penitent attack in Eridani
CommonwealthPub - rewrite using rumor framework
CommonwealthSlums - rewrite using rumor framework, rpgMissionAssignment
Raisu Station - rewrite using MissionType and rumor framework

Other changes:
rpgMissionAssignment - adds extra options: maxActive, intervalPerType, intervalPerStation
dsRPGAnalyzeItem - adds continue option so you can process multiple items
